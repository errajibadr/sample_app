name: Python CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest

      - name: Run Ruff
        run: ruff check .

      - name: Run tests
        run: pytest
        env:
          PYTHONPATH: ${{ github.workspace }} 

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/sample_api:latest
            ghcr.io/${{ github.repository_owner }}/sample_api:${{ github.sha }}
          
      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: ./web_app
          file: ./web_app/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/sample_ui:latest
            ghcr.io/${{ github.repository_owner }}/sample_ui:${{ github.sha }} 

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4

        - name: Create env file
          run: |
            echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" > docker-stack.env
            echo "COMMIT_HASH=${{ github.sha }}" >> docker-stack.env
            mkdir -p ~/letsencrypt

            
        - name: 'VPS Stack Deploy'
          uses: cssnr/stack-deploy-action@v1
          with:
            host: ${{ secrets.VPS_HOST }}
            user: 'deploy'
            ssh_key: ${{ secrets.VPS_DEPLOY_PRIVATE_KEY }}
            file: 'docker-stack.yml'
            name: 'sample_app_stack'
            env_file: 'docker-stack.env'
