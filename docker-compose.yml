services:
  reverse-ports:
    image: traefik:v3.1
    command: 
     - "--api.insecure=true" # allow access to the dashboard
     - "--providers.docker"
     - "--providers.docker.exposedbydefault=false" # don't expose all containers by default
     - "--entrypoints.web.address=:80" # listen on port 80
     - "--entrypoints.websecure.address=:443" # listen on port 443
     - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
     - "--certificatesresolvers.letsencrypt.acme.email=myemail@gmail.com"
     - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080" # traefik dashboard
    volumes:
    # allow traefik to monitor docker containers
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./letsencrypt:/letsencrypt


  web:
    build: ./app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.web.middlewares=redirect-to-https@docker"
      - "traefik.http.routers.web-secure.entrypoints=websecure"
      - "traefik.http.routers.web-secure.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.web-secure.tls=true"
      - "traefik.http.routers.web-secure.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.services.web-service.loadbalancer.server.port=8087"
    environment:
      - PYTHONUNBUFFERED=0
      - PYTHONPATH=/app
    command: >
      sh -c "export DATABASE_URL=postgresql://`cat /run/secrets/postgres_user`:`cat /run/secrets/postgres_password`@db:5432/clickdb &&
             python sample_app.py"
    depends_on:
      - db
    secrets:
      - postgres_password
      - postgres_user

  db:
    image: postgres:16
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=clickdb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - postgres_password
      - postgres_user

volumes:
  postgres_data:

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  postgres_user:
    file: ./secrets/postgres_user.txt 